/**
 * @File Constants.hpp
 * @Author dfnzhc (https://github.com/dfnzhc)
 * @Date 2025/5/15
 * @Brief This file is part of Man.
 */

#pragma once

#include "Man/Core/Forward.hpp"

#if MAN_CPU_CODE

#include <limits>
template<typename T>
using numeric_limits = std::numeric_limits<T>;

#elif MAN_GPU_CODE

#include <cuda/std/limits>
template<typename T>
using numeric_limits = ::cuda::std::numeric_limits<T>;

#endif

namespace man {
#define MAN_DEFINE_CONSTANT(name, val)                  \
    constexpr auto k##name = static_cast<Real>(val);    \
    constexpr auto k##name##_f = static_cast<f32>(val)

// clang-format off
MAN_DEFINE_CONSTANT(Pi,      3.14159265358979323846264338327950288);
MAN_DEFINE_CONSTANT(TwoPi,   6.28318530717958647692528676655900577);
MAN_DEFINE_CONSTANT(PiOver2, 1.57079632679489661923132169163975144);
MAN_DEFINE_CONSTANT(PiOver3, 1.04719755119659774615421446109316763);
MAN_DEFINE_CONSTANT(PiOver4, 0.785398163397448309615660845819875721);
MAN_DEFINE_CONSTANT(PiOver6, 0.52359877559829887307710723054658381);
MAN_DEFINE_CONSTANT(PiOver8, 0.39269908169872415480783042290993786);
MAN_DEFINE_CONSTANT(SqrtPi,  1.772453850905516027);
MAN_DEFINE_CONSTANT(Sqrt2Pi, 2.506628274631000502);

MAN_DEFINE_CONSTANT(InvPi,        0.318309886183790671537767526745028724);
MAN_DEFINE_CONSTANT(Inv2Pi,       kInvPi / 2);
MAN_DEFINE_CONSTANT(Inv4Pi,       kInvPi / 4);
MAN_DEFINE_CONSTANT(InvSqrtPi,    0.564189583547756286948079451560772586);
MAN_DEFINE_CONSTANT(InvSqrtTwoPi, 0.398942280401432677939946059934381868);

MAN_DEFINE_CONSTANT(E,      2.71828182845904523536028747135266250);
MAN_DEFINE_CONSTANT(Egamma, 0.577215664901532860606512090082402431);    ///< The Euler-Mascheroni constant
MAN_DEFINE_CONSTANT(Phi,    1.618033988749894848204586834365638118);    ///< The golden ratio
MAN_DEFINE_CONSTANT(Log2E,  1.4426950408889634);
MAN_DEFINE_CONSTANT(Log10E, 0.4342944819032518);
MAN_DEFINE_CONSTANT(Ln2,    0.693147180559945309417232121458176568);
MAN_DEFINE_CONSTANT(Ln3,    1.09861228866810969139524523692);
MAN_DEFINE_CONSTANT(Ln5,    1.60943791243410037460075933323);
MAN_DEFINE_CONSTANT(Ln10,   2.30258509299404568401799145468436421);

MAN_DEFINE_CONSTANT(Sqrt2, 1.4142135623730950488016887242096980785696718753769);
MAN_DEFINE_CONSTANT(Sqrt3, 1.73205080756887729352744634150587236694280525381038);
MAN_DEFINE_CONSTANT(Sqrt5, 2.2360679774997896964091736687312762354406183596115);

MAN_DEFINE_CONSTANT(InvSqrt2, 0.707106781186547524400844362104849039);
MAN_DEFINE_CONSTANT(InvSqrt3, 0.577350269189625764509148780501957456);

MAN_DEFINE_CONSTANT(Infinity,       numeric_limits<Real>::infinity());
MAN_DEFINE_CONSTANT(MachineEpsilon, numeric_limits<Real>::epsilon());

#undef MAN_DEFINE_CONSTANT

constexpr f32  kEpsilon_f = 1e-6f;
constexpr f64  kEpsilon_d = 1e-12;
constexpr Real kEpsilon   = std::is_same_v<Real, f32> ? kEpsilon_f : kEpsilon_d;

// clang-format on
} // namespace man